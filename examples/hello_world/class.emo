class Person {
	var name: String // 字段默认为 private
	var age: Int

	public
	var role: Role // 显式声明字段为 public

	// 函数默认为 public
	// 如果函数名以问号结尾，默认返回Bool值
	func tooOld?() {
		return self.olderThan?(maxAge)

	  // 或者这样调用
	  // return self.olderThan?(age: maxAge)
	}

	func olderThan?(age: Int) {
	  return self.age > age
  }

	func becomeAdmin() {
		self.becomeRole(Role.admin)
  }

	// 显式声明函数为 private
	private
	func canDeletePost?() -> Bool {
		return self.role == Role.admin
  }

	private
	func becomeRole(role: Role) {
    	self.role = role
  }

}

enum Role {
	case admin
	case normal
}

private
enum Direction {
  case up
  case down
  case left
  case right
}

var person = new(Person, {name: "David Lee", age: 33, role: Role.normal})

if person.tooOld?() {
	println("You're too old to find a job")
} else {
	println("Welcome, ${person.name}")

	person.becomeAdmin()

	if !person.canDeletePost?() {
		panic()
  }
}
